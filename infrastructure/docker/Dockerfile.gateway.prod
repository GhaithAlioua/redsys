# Production-ready Dockerfile for Redsys API Gateway (Nginx)
# Uses official nginx image with pinned version for stability

FROM nginx:stable-alpine

# Install required packages for enterprise deployment
RUN apk add --no-cache \
    curl \
    openssl \
    certbot \
    certbot-nginx \
    && rm -rf /var/cache/apk/*

# Create enterprise directory structure
RUN mkdir -p /etc/nginx/ssl \
    /var/log/nginx \
    /var/cache/nginx \
    /etc/nginx/conf.d \
    /var/www/html

# Copy enterprise nginx configuration
COPY services/api-gateway/nginx.conf /etc/nginx/nginx.conf
COPY services/api-gateway/conf.d/ /etc/nginx/conf.d/

# Set proper permissions (enterprise security standard)
RUN chown -R nginx:nginx /var/cache/nginx \
    /var/log/nginx \
    /etc/nginx/conf.d \
    /var/www/html \
    && chmod -R 755 /var/cache/nginx \
    /var/log/nginx \
    /var/www/html

# Health check endpoint
RUN echo 'server { listen 80; location /health { return 200 "healthy\n"; add_header Content-Type text/plain; } }' > /etc/nginx/conf.d/health.conf

# Expose ports
EXPOSE 80 443

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Start nginx (nginx:stable-alpine runs as root by default)
CMD ["nginx", "-g", "daemon off;"] 