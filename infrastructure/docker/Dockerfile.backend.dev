# Redsys Backend Dockerfile (Enterprise Pattern)
# Multi-stage build, minimal runtime, no shell scripts, CMD is the binary

# Build stage
FROM ubuntu:22.04 AS builder
ENV DEBIAN_FRONTEND=noninteractive
ENV CMAKE_BUILD_TYPE=Debug
ENV CXXFLAGS="-g -O0 -DDEBUG -fstack-protector-strong"
ENV CFLAGS="-g -O0 -DDEBUG -fstack-protector-strong"

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    gcc-11 g++-11 cmake git \
    libjsoncpp-dev uuid-dev openssl libssl-dev \
    zlib1g-dev libbrotli-dev libsqlite3-dev libpq-dev \
    libcurl4-openssl-dev libboost-all-dev pkg-config \
    wget ca-certificates curl build-essential \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

ENV CC=gcc-11 CXX=g++-11

RUN git clone https://github.com/drogonframework/drogon.git && \
    cd drogon && git checkout v1.9.11 && \
    git submodule update --init --recursive && \
    mkdir build && cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Debug \
    -DBUILD_CTL=OFF -DBUILD_EXAMPLES=OFF -DBUILD_ORM=ON \
    -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr/local \
    -DCMAKE_CXX_FLAGS="-g -O0 -DDEBUG -fstack-protector-strong" && \
    make -j$(nproc) && make install && ldconfig && \
    cd ../.. && rm -rf drogon

WORKDIR /app
COPY services/backend/ ./services/backend/
COPY shared/ ./shared/
COPY infrastructure/api/openapi.yaml ./infrastructure/api/
RUN cd services/backend && mkdir -p build && cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Debug && \
    make -j$(nproc)

# Runtime stage
FROM ubuntu:22.04 AS runtime
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libpq5 libssl3 libcurl4 libboost-system1.74.0 \
    libboost-thread1.74.0 libboost-filesystem1.74.0 \
    libboost-regex1.74.0 libjsoncpp25 uuid-runtime \
    libsqlite3-0 curl ca-certificates && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN groupadd -r redsys && useradd -r -g redsys -s /bin/bash -m redsys
COPY --from=builder /usr/local/lib /usr/local/lib
COPY --from=builder /usr/local/include /usr/local/include
COPY --from=builder /app/services/backend/build/redsys-backend /usr/local/bin/
COPY --from=builder /app/services/backend/config.json /etc/redsys/
COPY --from=builder /app/infrastructure/api/openapi.yaml /etc/redsys/
RUN ldconfig && chown -R redsys:redsys /etc/redsys
RUN mkdir -p /app/logs /app/uploads/tmp && \
    for i in $(seq 0 255); do \
    mkdir -p "/app/uploads/tmp/$(printf '%02X' $i)"; \
    done && \
    chown -R redsys:redsys /app
WORKDIR /app
USER redsys
EXPOSE 8080
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 CMD curl -f http://localhost:8080/health || exit 1
CMD ["redsys-backend"] 