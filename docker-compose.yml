# Redsys Enterprise Microservices Stack
#
# Service Overview:
# - redsys-postgres-db: Main Postgres DB for app data (persistent)
# - redsys-hydra-db: Dedicated Postgres DB for Hydra OAuth2 (persistent, isolated)
# - flyway: Database migrations (one-time job, enterprise standard)
# - hydra-migrate: Hydra OAuth2 migrations (one-time job, enterprise standard)
# - hydra: OAuth2 server (Ory Hydra)
# - backend: Main C++/Drogon backend (built/run as binary, no shell scripts)
# - oathkeeper: OAuth2 proxy (Ory Oathkeeper)
# - api-gateway: Nginx API Gateway (minimal, secure)
#
# All services use clear, lowercase, hyphenated names. All ports, env vars, and volumes are correct.
# All services use healthchecks and proper depends_on for startup order. No shell scripts for startup.
#
# This structure matches Google, Netflix, Uber, and Ory enterprise patterns.

services:
  redsys-postgres-db:
    image: postgres:16.2-alpine
    container_name: redsys-postgres-db
    environment:
      POSTGRES_DB: redsys_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    volumes:
      - redsys-postgres-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d redsys_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.5"
    networks:
      - redsys-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.redsys.service=database"
      - "com.redsys.tier=foundation"

  redsys-hydra-db:
    image: postgres:16.2-alpine
    container_name: redsys-hydra-db
    environment:
      POSTGRES_DB: hydra
      POSTGRES_USER: hydra_user
      POSTGRES_PASSWORD: ${HYDRA_DB_PASSWORD:-hydra_secure_password_2024}
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    volumes:
      - redsys-hydra-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hydra_user -d hydra"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"
    networks:
      - redsys-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.redsys.service=database"
      - "com.redsys.tier=foundation"

  flyway:
    image: flyway/flyway:9-alpine
    container_name: redsys-flyway
    command: migrate
    volumes:
      - ./shared/database/migrations:/flyway/sql:ro
      - ./shared/database/flyway.conf:/flyway/conf/flyway.conf:ro
    depends_on:
      redsys-postgres-db:
        condition: service_healthy
    networks:
      - redsys-network
    restart: "no"
    labels:
      - "com.redsys.service=migration"
      - "com.redsys.tier=foundation"

  hydra-migrate:
    image: oryd/hydra:v2.2.0
    container_name: redsys-hydra-migrate
    command: migrate sql --yes postgres://hydra_user:${HYDRA_DB_PASSWORD:-hydra_secure_password_2024}@redsys-hydra-db:5432/hydra?sslmode=disable
    depends_on:
      redsys-hydra-db:
        condition: service_healthy
    networks:
      - redsys-network
    restart: "no"
    labels:
      - "com.redsys.service=migration"
      - "com.redsys.tier=foundation"

  hydra:
    image: oryd/hydra:v2.2.0
    container_name: redsys-hydra
    command: serve all --dev
    environment:
      DSN: postgres://hydra_user:${HYDRA_DB_PASSWORD:-hydra_secure_password_2024}@redsys-hydra-db:5432/hydra?sslmode=disable
      URLS_SELF_ISSUER: http://hydra:4444/
      URLS_CONSENT: http://redsys-api-gateway/consent
      URLS_LOGIN: http://redsys-api-gateway/login
      SECRETS_SYSTEM: ${HYDRA_SECRETS_SYSTEM:-redsys_hydra_secrets_system_2024_secure_key_32_chars}
      LOG_LEVEL: info
      SERVE_TLS_ALLOW_TERMINATION_FROM: 0.0.0.0/0
      OAUTH2_EXPOSE_INTERNAL_ERRORS: false
      OAUTH2_ISSUER_URL: http://hydra:4444/
    ports:
      - "4444:4444"
      - "4445:4445"
    depends_on:
      hydra-migrate:
        condition: service_completed_successfully
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:4444/health/ready",
        ]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"
    networks:
      - redsys-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.redsys.service=authentication"
      - "com.redsys.tier=security"

  backend:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile.backend.dev
    image: redsys/backend:latest
    container_name: redsys-backend
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs
    depends_on:
      flyway:
        condition: service_completed_successfully
      hydra:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "2.0"
        reservations:
          memory: 1G
          cpus: "1.0"
    networks:
      - redsys-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.redsys.service=backend"
      - "com.redsys.tier=application"

  oathkeeper:
    image: oryd/oathkeeper:v0.40.6
    container_name: redsys-oathkeeper
    command: serve --config /etc/oathkeeper/config.yaml
    volumes:
      - ./infrastructure/oathkeeper/config.yaml:/etc/oathkeeper/config.yaml:ro
      - ./infrastructure/oathkeeper/access-rules.yaml:/etc/oathkeeper/access-rules.yaml:ro
    ports:
      - "4455:4455"
      - "4456:4456"
      - "4457:4457"
    depends_on:
      hydra:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:4456/health/alive",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
        reservations:
          memory: 128M
          cpus: "0.25"
    networks:
      - redsys-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.redsys.service=proxy"
      - "com.redsys.tier=security"

  api-gateway:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile.gateway.dev
    image: redsys/api-gateway:latest
    container_name: redsys-api-gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./services/api-gateway/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./services/api-gateway/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      backend:
        condition: service_healthy
      oathkeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
        reservations:
          memory: 128M
          cpus: "0.25"
    networks:
      - redsys-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.redsys.service=gateway"
      - "com.redsys.tier=edge"

networks:
  redsys-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redsys-postgres-db-data:
    driver: local
  redsys-hydra-db-data:
    driver: local
